[{"categories":null,"contents":"当前工作流的问题 现在每进入一个新的领域，都是胡乱的搜一通，形不成系统性的总结，所以很多领域了解过之后就完全忘了。所以考虑能否利用让agent自动的帮助我去搜寻某个领域的资料，帮助我能够快速了解某个领域，然后形成markdown文本，这样就能迅速推到我的blog，方便后续阅览。 怎么样结合爬虫去更好的更新领域知识 方向卒，因为网页搜索API要收费\n","date":"2025-01-14T20:22:35+08:00","permalink":"https://summertaiyuan.github.io/post/aiagent/","section":"post","tags":null,"title":"Ai Agent改善自身工作流"},{"categories":["computer graphics","robtic"],"contents":"Teleoperation: spacemouse ","date":"2025-01-13T20:37:48+08:00","permalink":"https://summertaiyuan.github.io/post/transfrom/","section":"post","tags":null,"title":"Teleoperation"},{"categories":null,"contents":"xunfei - 自动驾驶 基本没做过相关工作，yolov11s也就是用的ultralytics, 没有怎么研究\n唯一的收获就是他问我解决过什么技术难点，这块回答的太差了，明明做过很多工作，但是面试的时候啥也没想到，脑子简直蒙了\n位姿估计 我们试过目前最先进的方法了： 我们最初想做姿态估计的时候，肯定也是找目前的SOTA方法，就把注意力转向了foundationPose，， FoundationPose不仅有开源代码，还有在jetson平台上的Issac ROS Nitros加速代码，用的tensorrt 部署和GXF图框架，很符合我们的项目需求，所以我们就开始研究foundationPose.\n先看pytorch源码，然后复现结果。foundationpose 其实方法特别暴力， 并且他只能做单目标的位姿估计，同时需要rgb, 深度图，合适的mesh（物体size不能差距太大）， 原论文采用了Nerf生成mesh的方法，但是Nerf重建方法对于小物体的精度不够，\n我们发现Isaac Ros里面的Foundation Pose 的位置估计初始总是有偏差，然后导致随后的跟踪效果越来越差， 然后深刻理解他的原理之后， 我开始对GXF框架编写的FoundationPose代码进行debug, 然后发现是他们部署的代码有bug, 还有跟踪发出的时间戳保持了初始时刻姿态估计的时间戳，这是不符合实际项目的需求的，我们修复了他的源代码，满足了实际项目需求。\n因为GXF 是nvidia 内部使用的框架，所以网上公开的资料很少，开始我们只能通过点点资料 + 断点调试 + 猜测去分析整个项目，当时感觉很难很难继续往下推进，但是靠自己的努力，一点点的把bug啃了下来，后来和NV交流的时候他们也直接建议我们不要去改他们GXF写的源码， 但是确实是有bug\n做出目标估计我们需要验证精度，验证精度我们又是发难了，因为验证精度们，你总要找个能测出姿态的更精确的传感器吧，但是我们部门的支持也不够，所以我们也只能想其他办法，那怎么办呢，我们做视觉的，那只能想视觉的办法了。所以就用了Aruco标定版，solvepnp的方式去求解位姿。\n结果方向foundation pose的姿态转化为欧拉角之后，和标定出来的有几度的差距，精度是达不到要求，foundationpose已经是深度学习最先进的方法了，我们的目标还是一个无纹理的物体，所以用colmap估计真实位姿也挺难，没办法制作数据集，learning的方法就不考虑了，只能想其他办法了。后来我们就把目标就投到了传统方法，就尝试用目标检测扣点云，ransac法向量估计，然后再将inlier点投影到平面上，去求最小外接转矩形，再把求的的方向反变换回来，得到物体真实姿态，然后发现传统方法确实要比foundation pose的效果好，就在我们的任务中用了最合适的传统方法。\n点云孔洞处理 我们的插拔typeC操作需要近距离操作，所以最开始我们用了D405,因为官方文档不是说工具距离更近吗， 但是405是个双目，他对于无纹理和镜面深度估计不行，全是孔洞，最开始就是自己在物体背面涂画一些涂鸦，人为制造纹理，然后去打光，制造对比度，发现点云效果还行。但是实际产线肯定不让你涂东西的/ 后来我们只能改成435, 因为他是结构光 + 双目，所以对于无纹理的可以很好的估计，但是我们发现效果有时候还是不行，点云时好时坏的，还是会出现大面积的孔洞。想尝试加偏振片，但是领导也不给予支持，所以也没办法。后来只能去开启滤波，包括孔洞填充，空间滤波，去让点云变得稳定。 但是滤波也不能解决核心问题，还是会有孔洞，因为我们从405的经验是打光能让点云变好，因为我们的物体是iphone手机么，两面都是高光材质，所以有镜面反射，所以我们猜测是不是镜面反射让结构光失效了，于是我们就把环境光调低，果然点云效果就变好了，然后解决了这个问题。 UV固化，一个月演示 时间特别紧，所有感知相关的活都要自己干，而且还要去深圳产线现场连调，一个月项目就要演示。\n以前标数据都是阿里云去标，但是这次时间太紧了，阿里云标注时间特别长，所以我们就想借助大模型做工具，于是就去找了Grouded sam2, 利用他完成了5000张数据集的标注，利用ultralytics Yolov11进行训练，用BotSort完成多目标跟踪，3天实现产线上pad的稳定分割和追踪\n工业相机的标定，一直不给买大的标定版，我们只能用A4纸打印的去标定，但是工业相机架的很高，所以手在眼外标定的精度很差，所以我们只能想其他迂回的办法了。 所幸的是，我们手臂上还有一个摄像头，我们手臂上眼在手上标定因为距离近，还是可以得到一个不错的精度的，用这个间接去算工业相机的标定。我们把标定版抬高，然后机械臂也抬高，知道标定版相对于工业相机关系，也知道标定版相对于手臂上realsense的关系，因为realsense的眼在手上有，这样就可以间接得到工业相机在baselink下的关系，最后为了结果稳定，我们将多次不同位置的结果做了平均。\n最后pad放进固化炉子之后，因为需要用视觉方法确定其是否烟丝合缝的嵌入进去了，我们想的方法就是先走到固定点位，然后获取凹进去的平面的mask, 然后pad放进去之后，做完实例分割之后，二者求交，大于阈值就判断放好了，如果没有还需要二次调整，但是因为我们自研的机械臂重复定位精度差，沒办法每次走到相同点位，而且随着运行时间长越走越差，所以这种方法就失效了，为了能够做判断，我们只能是将相机固定在机械臂外，这样每次的凹进去的mask真实值就不会再变了。\nyolov11 架构能讲解一下吗？但是我还是应该了解一下最后是怎么检测的\n从我搞科研的经历说起，改模型是一项吃力不讨好的工作，收效甚微，对于我们做业务的人来说，能够快速上线，稳定检测是紧急的任务，所以我并不会优先去做改模型的工作。\n我们的场景很单一，目标也比较单一, 所以我们更希望的是能够让灰度和彩色图像共用一套代码，我们对于数据预处理和数据增强做了些改进，比方说把灰度图叠加三个通道，使得其能和彩色图像一块训，然后比方说对于彩色图像数据，我们要随机让他转化为灰度图像，这样子去增强灰度图像检测效果。\nVLA模型遇到的问题 末端姿态控制，导致经常进去奇异点。如果你判断他不懂了，你就要自己去做些短程的运动控制，去从奇异点走出来。 你好,.明天 Flow matching的原理 速度场建模，基于最速传输 初始化一个随即噪声和时间t, 然后在基于时间t在样本和噪声之间做插值，样本和噪声之间的最快速度就是应该二者的差值，去噪声过程就是去预测这两个差值， CVAE的原理- ACT的原理 encoder 基于observation 和 action 去预测隐变量的均值和方差\ndecoder 基于 observation 和 隐变量Z生成的噪声去预测action. 基于重建误差和 标准正太分布的KL散度损失函数, 也就是优化ELBO(evidence lower bound) 下界\n部署过程中的问题 为了加速模型tensorrt推理的后处理过程，原本我们用的是numpy,但是我们profile之后发现后处理这部分代码耗时快赶上推理了，我们就开始优化，用cupy gpu矩阵计算去替代numpy，然后去加速后处理过程 优化点云姿态估计的速度，也是同样的思想，先去找热点，发现有点云生成和矩阵乘是比较大的热点，然后就是各种优化，合并操作，矩阵乘上gpu, open3d 用cuda实现。 优化c++ tensorrt部署，主要是利用perf工具，去计算函数和代码行比较耗时，也是去尽量减少没有必要的操作。 还有很多工程和业务相关的事情，比如要比模型功能封装在ROS2节点中，而且还要保证能够同时处理多个请求操作，就是利用ROS2自己的多线程机制，最开始发生死锁问题， 一点一点的去debug ","date":"2025-01-10T00:50:32+08:00","permalink":"https://summertaiyuan.github.io/post/title/","section":"post","tags":null,"title":"面试总结"},{"categories":["linux"],"contents":"Tmux # Enable mouse set -g mouse on # 快速调整（步长为 6 单位） bind -n M-h resize-pane -L 6 # Alt + Shift + H 向左快速调整 bind -n M-l resize-pane -R 6 # Alt + Shift + L 向右快速调整 bind -n M-j resize-pane -D 6 # Alt + Shift + J 向下快速调整 bind -n M-k resize-pane -U 6 # Alt + Shift + K 向上快速调整 bind -n C-h select-pane -L bind -n C-l select-pane -R bind -n C-j select-pane -D bind -n C-k select-pane -U # Copy mode setw -g mode-keys vi bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel \u0026#34;xclip -selection clipboard\u0026#34; # Reload config bind r source-file ~/.tmux.conf \\; display-message \u0026#34;Config reloaded!\u0026#34; zsh export plugins=(git fzf zsh-autosuggestions sudo docker zsh-z zsh-syntax-highlighting web-search) #web-search plug能够直接在终端搜索网站，chatgpt helloworld zsh需要达到能用地步，需要配置如上插件，zsh\n在命令行开始vim模式， 最好别用，还是emacs控制命令行更方便\nset -o vi 开启z插件后，可通过z目录任意词迅速跳转到常见目录。bash 可以通过安装zoxide进行常用目录快速跳转\nsudo apt install zoxide eval \u0026#34;$(zoxide init bash)\u0026#34; source ~/.bashr vim vim --version | grep clip 查询是否有剪贴板插件 \u0026#34; 复制到系统剪贴板 nnoremap \u0026lt;C-c\u0026gt; \u0026#34;+y vnoremap \u0026lt;C-c\u0026gt; \u0026#34;+y \u0026#34; 从系统剪贴板粘贴 nnoremap \u0026lt;C-v\u0026gt; \u0026#34;+p inoremap \u0026lt;C-v\u0026gt; \u0026#34;+p vscode 插件 名称: AREPL for python ID: almenon.arepl 说明: real-time python scratchpad 版本: 3.0.0 发布者: Almenon VS Marketplace 链接: https://marketplace.visualstudio.com/items?itemName=almenon.arepl\n名称: MetaJump ID: metaseed.MetaJump 说明: vscode cursor move/select/delete; jump, navigation, goto, acejump 版本: 1.4.4 发布者: metaseed VS Marketplace 链接: https://marketplace.visualstudio.com/items?itemName=metaseed.MetaJump\n名称: Wolf ID: traBpUkciP.wolf 说明: Python live scratchpad 版本: 0.4.3 发布者: traBpUkciP VS Marketplace 链接: https://marketplace.visualstudio.com/items?itemName=traBpUkciP.wolf\n名称: Path Autocomplete ID: ionutvmi.path-autocomplete 说明: Provides path completion for visual studio code and VS Code for Web. 版本: 1.25.0 发布者: Mihai Vilcu VS Marketplace 链接: https://marketplace.visualstudio.com/items?itemName=ionutvmi.path-autocomplete\n仓库地址 nvidia python package repo\n","date":"2025-01-10T00:25:28+08:00","permalink":"https://summertaiyuan.github.io/post/helloworld/","section":"post","tags":null,"title":"linux 终端实用配置"},{"categories":["Guide"],"contents":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don’t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables Tables aren’t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Code block with backticks \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo’s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\n$$ dX_n + Yn = Zn $$Press CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike’s talk during Gopherfest, November 18, 2015.\n","date":"2023-02-16T18:58:11+08:00","permalink":"https://summertaiyuan.github.io/post/markdown_syntax_guide/","section":"post","tags":null,"title":"Markdown Syntax Guide"},{"categories":null,"contents":" \u003c!DOCTYPE html\u003e 是树木游泳的力量 顾城 是树木游泳的力量\n使鸟保持它的航程\n使它想起潮水的声音\n鸟在空中说话\n它说：中午\n它说：树冠的年龄\n芳香覆盖我们全身\n长长清凉的手臂越过内心\n我们在风中游泳\n寂静成型\n我们看不见最初的日子\n最初，只有爱情\n1985.05 ","date":"2019-04-26T20:18:54+03:00","permalink":"https://summertaiyuan.github.io/about/","section":"","tags":null,"title":"是树木游泳的力量"}]